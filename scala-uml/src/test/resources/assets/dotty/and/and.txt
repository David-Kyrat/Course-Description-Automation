trait Resettable {
  def reset(): Unit
}
trait Growable[T] {
  def add(t: T): Unit
}
def f(x: Resettable & Growable[String]) = {
  x.reset()
  x.add("first")
}

trait A {
  def children: List[A]
}
trait B {
  def children: List[B]
}
val x: A & B = new C
val ys: List[A & B] = x.children

class C extends A with B {
  def children: List[A & B] = ???
}